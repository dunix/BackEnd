//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebRole1.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bj_gimnasioEntities : DbContext
    {
        public bj_gimnasioEntities()
            : base("name=bj_gimnasioEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ADMINISTRADOR> ADMINISTRADOR { get; set; }
        public virtual DbSet<CLIENTE> CLIENTE { get; set; }
        public virtual DbSet<EJERCICIO> EJERCICIO { get; set; }
        public virtual DbSet<EJERCICIO_POR_RUTINA> EJERCICIO_POR_RUTINA { get; set; }
        public virtual DbSet<HORARIO_GIMNASIO> HORARIO_GIMNASIO { get; set; }
        public virtual DbSet<Identificadores> Identificadores { get; set; }
        public virtual DbSet<INSTRUCTOR> INSTRUCTOR { get; set; }
        public virtual DbSet<INSTRUCTOR_RUTINA> INSTRUCTOR_RUTINA { get; set; }
        public virtual DbSet<MAQUINA> MAQUINA { get; set; }
        public virtual DbSet<MEBRESIA> MEBRESIA { get; set; }
        public virtual DbSet<MEDIDA> MEDIDA { get; set; }
        public virtual DbSet<MEDIDA_POR_CLIENTE> MEDIDA_POR_CLIENTE { get; set; }
        public virtual DbSet<MEMBRESIA_POR_CLIENTE> MEMBRESIA_POR_CLIENTE { get; set; }
        public virtual DbSet<PERSONA> PERSONA { get; set; }
        public virtual DbSet<roles> roles { get; set; }
        public virtual DbSet<RUTINA> RUTINA { get; set; }
        public virtual DbSet<userclaims> userclaims { get; set; }
        public virtual DbSet<userlogins> userlogins { get; set; }
        public virtual DbSet<userroles> userroles { get; set; }
        public virtual DbSet<users> users { get; set; }
        public virtual DbSet<VISITA> VISITA { get; set; }
    
        public virtual int funcionarios(Nullable<int> cantHorasSemanales, string str_Cedula, Nullable<int> rol, string nombre, string email)
        {
            var cantHorasSemanalesParameter = cantHorasSemanales.HasValue ?
                new ObjectParameter("CantHorasSemanales", cantHorasSemanales) :
                new ObjectParameter("CantHorasSemanales", typeof(int));
    
            var str_CedulaParameter = str_Cedula != null ?
                new ObjectParameter("Str_Cedula", str_Cedula) :
                new ObjectParameter("Str_Cedula", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("funcionarios", cantHorasSemanalesParameter, str_CedulaParameter, rolParameter, nombreParameter, emailParameter);
        }
    
        public virtual int sp_next_pk(string avc_tabla, ObjectParameter ai_pk)
        {
            var avc_tablaParameter = avc_tabla != null ?
                new ObjectParameter("avc_tabla", avc_tabla) :
                new ObjectParameter("avc_tabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_next_pk", avc_tablaParameter, ai_pk);
        }
    
        public virtual ObjectResult<string> usp_get_horario(string vALOR)
        {
            var vALORParameter = vALOR != null ?
                new ObjectParameter("VALOR", vALOR) :
                new ObjectParameter("VALOR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_get_horario", vALORParameter);
        }
    
        public virtual ObjectResult<string> usp_login(string user, string password)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_login", userParameter, passwordParameter);
        }
    }
}
